#!/usr/bin/python
#
# Author(s): 
#   Lars Orum Rasmussen
#   Martin Raspaud

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
import sys
import os
import logging
import getopt
from glob import glob
from datetime import datetime
import signal
import hashlib

import rpclite as rpc
from rpclite.server import ForkingXMLRPCServer as XMLRPCServer

from datex import datetime_format, datex_config
from datex.config import DatexConfig
from datex.publisher import Publisher
from datex.services import get_datatype_list, get_file_list, get_file, get_file_chunk, get_file_md5

logger = logging.getLogger('datex-server')

# time.strptime not thread-safe (Issue 7980), work around
datetime.strptime("1956", "%Y")

#-----------------------------------------------------------------------------
#
# Signals we care about
#
#-----------------------------------------------------------------------------
class HangupInterrupt(Exception):    
    pass # reload configuration
def sighup_handler(signum, frame): 
    raise HangupInterrupt
signal.signal(signal.SIGHUP, sighup_handler)

def sigstop_handler(signum, frame):
    raise SystemExit
signal.signal(signal.SIGTERM, sigstop_handler)

rpc_address, publish_destination = datex_config.get_server()

#-----------------------------------------------------------------------------
#
# Register services
#
#-----------------------------------------------------------------------------
logger.info('rpc-server starting')
rpc_server = XMLRPCServer('file_server', rpc_address)    
rpc_server.register_function(get_datatype_list, 'get_datatype_list')
rpc_server.register_function(get_file_list, 'get_file_list')
rpc_server.register_function(get_file, 'get_file')
rpc_server.register_function(get_file_chunk, 'get_file_chunk')
rpc_server.register_function(get_file_md5, 'get_file_md5')

#-----------------------------------------------------------------------------
#
# Publish files
#
#-----------------------------------------------------------------------------
Publisher.bind(publish_destination)
for dt in datex_config.get_datatypes():
    metadata = {}
    metadata['format'], metadata['compressed'] = datex_config.get_metadata(dt)
    metadata['uri'] = 'datexrpc://%s:%d/%s/'%(rpc_address[0], rpc_address[1], dt)
    logger.info('starting %s', dt)    
    Publisher(dt, metadata).start()

#-----------------------------------------------------------------------------
while(True):
    try:
        rpc_server.serve_forever()
    except HangupInterrupt:
        continue
    except (KeyboardInterrupt, SystemExit):
        logger.info('rpc-server stopping')
        break
