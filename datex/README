= DATEX =
A `prototype` for a data exchange server and client between DMI and SMHI,
using rpclite and zmq's publish/subscibe.

It goes like this:

== Server ==
  * zmq: publish specific datatypes which can be fetched.
  * rpclite: RPC server.

== Client ==
  * zmq: subscriber to specific datatypes.
  * rpclite: RPC client, for each new published message fetch the corresponding
   file.


The configuration of the client and server is defined in the etc/datex.cfg
file. It has to contain the "server" and "client" sections, defining the
variables "rpc_address" and "publish_address"/"publish_destination". Moreover,
if you want the server to serve anything, it can be good to add datatype
sections, for example::

  [datatype-pol_L0]
  distribute = True
  glob = *.hrpt.bz2
  dir = /net/prodsat/datadb/sat/polar/smb/level0
  format = hrpt
  compressed = bzip

The config file's location is given by the DATEX_CONFIG_DIR environment variable.

The "distribute" flag tells if the given datatype needs to be distributed by
the publisher, the "glob" variable describes the filename pattern, the "dir"
variable is self describing, the "format" gives the format of the file, while
the compressed flag tells if the data is compressed or not.

Once everything is defined, you just need to start the client and the
server. Here is the usage of the client::

  datex_client [-c] [-H] <datatype>
      -c, md5 check of received file
      -H, this info

and here is the usage of the server::
    
  datex_server

And a standalone client program to execute datex commands:

  datex_cmd [-c] [-H] <command> [<datatype>] [<filename>]
      -c, md5 check of received file (together with <get_file>)
      -H, this info
      valid commands: 'get_file', 'get_file_md5', 'info', 'list_datatypes'
                      'list_files', 'list_files_latest'
